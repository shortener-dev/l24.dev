// Code generated by MockGen. DO NOT EDIT.
// Source: shortener/dao.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	shortener "url-shortnener/shortener"

	gomock "github.com/golang/mock/gomock"
)

// MockShortDAO is a mock of ShortDAO interface.
type MockShortDAO struct {
	ctrl     *gomock.Controller
	recorder *MockShortDAOMockRecorder
}

// MockShortDAOMockRecorder is the mock recorder for MockShortDAO.
type MockShortDAOMockRecorder struct {
	mock *MockShortDAO
}

// NewMockShortDAO creates a new mock instance.
func NewMockShortDAO(ctrl *gomock.Controller) *MockShortDAO {
	mock := &MockShortDAO{ctrl: ctrl}
	mock.recorder = &MockShortDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortDAO) EXPECT() *MockShortDAOMockRecorder {
	return m.recorder
}

// GetShort mocks base method.
func (m *MockShortDAO) GetShort(ctx context.Context, redirect_path string) (*shortener.Short, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShort", ctx, redirect_path)
	ret0, _ := ret[0].(*shortener.Short)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShort indicates an expected call of GetShort.
func (mr *MockShortDAOMockRecorder) GetShort(ctx, redirect_path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShort", reflect.TypeOf((*MockShortDAO)(nil).GetShort), ctx, redirect_path)
}

// InsertShort mocks base method.
func (m *MockShortDAO) InsertShort(ctx context.Context, short shortener.Short) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertShort", ctx, short)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertShort indicates an expected call of InsertShort.
func (mr *MockShortDAOMockRecorder) InsertShort(ctx, short interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertShort", reflect.TypeOf((*MockShortDAO)(nil).InsertShort), ctx, short)
}
